{
	"id": "179e0820e1916db0f8b7064ac97b78bc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"conditional.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity  ^0.8.16;\r\n\r\ncontract operators {\r\n    uint public a = 5;\r\n    uint public b = 6;\r\n\r\n    function get() public view returns (uint){\r\n        if(a == 4 && b == 6){\r\n            return 1;\r\n        }else  if( a == 5 ){\r\n           return 2;\r\n        }\r\n        else{\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"conditional.sol": {
				"operators": {
					"abi": [
						{
							"inputs": [],
							"name": "a",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "b",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"conditional.sol\":62:356  contract operators {... */\n  mstore(0x40, 0x80)\n    /* \"conditional.sol\":104:105  5 */\n  0x05\n    /* \"conditional.sol\":88:105  uint public a = 5 */\n  0x00\n  sstore\n    /* \"conditional.sol\":128:129  6 */\n  0x06\n    /* \"conditional.sol\":112:129  uint public b = 6 */\n  0x01\n  sstore\n    /* \"conditional.sol\":62:356  contract operators {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"conditional.sol\":62:356  contract operators {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0dbe671f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4df7e3d0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6d4ce63c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"conditional.sol\":88:105  uint public a = 5 */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conditional.sol\":112:129  uint public b = 6 */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conditional.sol\":138:353  function get() public view returns (uint){... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conditional.sol\":88:105  uint public a = 5 */\n    tag_7:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"conditional.sol\":112:129  uint public b = 6 */\n    tag_11:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"conditional.sol\":138:353  function get() public view returns (uint){... */\n    tag_14:\n        /* \"conditional.sol\":174:178  uint */\n      0x00\n        /* \"conditional.sol\":198:199  4 */\n      0x04\n        /* \"conditional.sol\":193:194  a */\n      sload(0x00)\n        /* \"conditional.sol\":193:199  a == 4 */\n      eq\n        /* \"conditional.sol\":193:209  a == 4 && b == 6 */\n      dup1\n      iszero\n      tag_17\n      jumpi\n      pop\n        /* \"conditional.sol\":208:209  6 */\n      0x06\n        /* \"conditional.sol\":203:204  b */\n      sload(0x01)\n        /* \"conditional.sol\":203:209  b == 6 */\n      eq\n        /* \"conditional.sol\":193:209  a == 4 && b == 6 */\n    tag_17:\n        /* \"conditional.sol\":190:346  if(a == 4 && b == 6){... */\n      iszero\n      tag_18\n      jumpi\n        /* \"conditional.sol\":232:233  1 */\n      0x01\n        /* \"conditional.sol\":225:233  return 1 */\n      swap1\n      pop\n      jump(tag_16)\n        /* \"conditional.sol\":190:346  if(a == 4 && b == 6){... */\n    tag_18:\n        /* \"conditional.sol\":260:261  5 */\n      0x05\n        /* \"conditional.sol\":255:256  a */\n      sload(0x00)\n        /* \"conditional.sol\":255:261  a == 5 */\n      sub\n        /* \"conditional.sol\":251:346  if( a == 5 ){... */\n      tag_20\n      jumpi\n        /* \"conditional.sol\":284:285  2 */\n      0x02\n        /* \"conditional.sol\":277:285  return 2 */\n      swap1\n      pop\n      jump(tag_16)\n        /* \"conditional.sol\":251:346  if( a == 5 ){... */\n    tag_20:\n        /* \"conditional.sol\":333:334  0 */\n      0x00\n        /* \"conditional.sol\":326:334  return 0 */\n      swap1\n      pop\n        /* \"conditional.sol\":138:353  function get() public view returns (uint){... */\n    tag_16:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_22:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_23:\n        /* \"#utility.yul\":177:201   */\n      tag_27\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_22\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_9:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_29\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_23\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200f5b6ddf1c89f9c2c5e41ea3fcdcfd09877fcb6a31b1d174cf1b72919089ba9464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260055f5560066001553480156017575f80fd5b5061014a806100255f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80630dbe671f146100435780634df7e3d0146100615780636d4ce63c1461007f575b5f80fd5b61004b61009d565b60405161005891906100fb565b60405180910390f35b6100696100a2565b60405161007691906100fb565b60405180910390f35b6100876100a8565b60405161009491906100fb565b60405180910390f35b5f5481565b60015481565b5f60045f541480156100bc57506006600154145b156100ca57600190506100e0565b60055f54036100dc57600290506100e0565b5f90505b90565b5f819050919050565b6100f5816100e3565b82525050565b5f60208201905061010e5f8301846100ec565b9291505056fea26469706673582212200f5b6ddf1c89f9c2c5e41ea3fcdcfd09877fcb6a31b1d174cf1b72919089ba9464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH0 SSTORE PUSH1 0x6 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x17 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A DUP1 PUSH2 0x25 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDBE671F EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x4DF7E3D0 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0xA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SLOAD EQ DUP1 ISZERO PUSH2 0xBC JUMPI POP PUSH1 0x6 PUSH1 0x1 SLOAD EQ JUMPDEST ISZERO PUSH2 0xCA JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x5 PUSH0 SLOAD SUB PUSH2 0xDC JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xE0 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5 DUP2 PUSH2 0xE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E PUSH0 DUP4 ADD DUP5 PUSH2 0xEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF JUMPDEST PUSH14 0xDF1C89F9C2C5E41EA3FCDCFD0987 PUSH32 0xCB6A31B1D174CF1B72919089BA9464736F6C634300081A003300000000000000 ",
							"sourceMap": "62:294:0:-:0;;;104:1;88:17;;128:1;112:17;;62:294;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@a_4": {
									"entryPoint": 157,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@b_7": {
									"entryPoint": 162,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@get_34": {
									"entryPoint": 168,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:439:1",
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80630dbe671f146100435780634df7e3d0146100615780636d4ce63c1461007f575b5f80fd5b61004b61009d565b60405161005891906100fb565b60405180910390f35b6100696100a2565b60405161007691906100fb565b60405180910390f35b6100876100a8565b60405161009491906100fb565b60405180910390f35b5f5481565b60015481565b5f60045f541480156100bc57506006600154145b156100ca57600190506100e0565b60055f54036100dc57600290506100e0565b5f90505b90565b5f819050919050565b6100f5816100e3565b82525050565b5f60208201905061010e5f8301846100ec565b9291505056fea26469706673582212200f5b6ddf1c89f9c2c5e41ea3fcdcfd09877fcb6a31b1d174cf1b72919089ba9464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDBE671F EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x4DF7E3D0 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0xA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SLOAD EQ DUP1 ISZERO PUSH2 0xBC JUMPI POP PUSH1 0x6 PUSH1 0x1 SLOAD EQ JUMPDEST ISZERO PUSH2 0xCA JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x5 PUSH0 SLOAD SUB PUSH2 0xDC JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xE0 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5 DUP2 PUSH2 0xE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E PUSH0 DUP4 ADD DUP5 PUSH2 0xEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF JUMPDEST PUSH14 0xDF1C89F9C2C5E41EA3FCDCFD0987 PUSH32 0xCB6A31B1D174CF1B72919089BA9464736F6C634300081A003300000000000000 ",
							"sourceMap": "62:294:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;88:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;138:215;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;88:17;;;;:::o;112:::-;;;;:::o;138:215::-;174:4;198:1;193;;:6;:16;;;;;208:1;203;;:6;193:16;190:156;;;232:1;225:8;;;;190:156;260:1;255;;:6;251:95;;284:1;277:8;;;;251:95;333:1;326:8;;138:215;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "66000",
								"executionCost": "44326",
								"totalCost": "110326"
							},
							"external": {
								"a()": "2402",
								"b()": "2425",
								"get()": "6743"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 356,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 356,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 356,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 104,
									"end": 105,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 88,
									"end": 105,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 105,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 112,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 129,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 356,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 356,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 62,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 356,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 62,
									"end": 356,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 356,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 62,
									"end": 356,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 356,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62,
									"end": 356,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62,
									"end": 356,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 356,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 356,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 356,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 62,
									"end": 356,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 356,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f5b6ddf1c89f9c2c5e41ea3fcdcfd09877fcb6a31b1d174cf1b72919089ba9464736f6c634300081a0033",
									".code": [
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "DBE671F"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "4DF7E3D0"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "6D4CE63C"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 356,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 88,
											"end": 105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 88,
											"end": 105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 88,
											"end": 105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 112,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 112,
											"end": 129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 112,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 112,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 112,
											"end": 129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 112,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 138,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 138,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 138,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 138,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 138,
											"end": 353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 138,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 138,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 112,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 112,
											"end": 129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 138,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 193,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 193,
											"end": 194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 193,
											"end": 199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 193,
											"end": 209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 193,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 193,
											"end": 209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 193,
											"end": 209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 203,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 203,
											"end": 204,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 203,
											"end": 209,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 193,
											"end": 209,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 193,
											"end": 209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 190,
											"end": 346,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 190,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 190,
											"end": 346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 225,
											"end": 233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 225,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 225,
											"end": 233,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 190,
											"end": 346,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 190,
											"end": 346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 261,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 255,
											"end": 256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 256,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 255,
											"end": 261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 251,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 277,
											"end": 285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 277,
											"end": 285,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 251,
											"end": 346,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 138,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"conditional.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"a()": "0dbe671f",
							"b()": "4df7e3d0",
							"get()": "6d4ce63c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"a\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"conditional.sol\":\"operators\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"conditional.sol\":{\"keccak256\":\"0xbd7c57f3e07b7e76ace337160db148c305ad8d07cb4be16f083d5a6b0e889a74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c500bf3a95ed3951288f3aba2a3cb0f9faa02db6958c708cbad179ec287c813\",\"dweb:/ipfs/QmWJTcXx9rHKsWA1e2v9i6yoYgUaAdjn5nDAVK5LynTgPn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "conditional.sol:operators",
								"label": "a",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "conditional.sol:operators",
								"label": "b",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"conditional.sol": {
				"ast": {
					"absolutePath": "conditional.sol",
					"exportedSymbols": {
						"operators": [
							35
						]
					},
					"id": 36,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "operators",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "operators",
							"nameLocation": "71:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dbe671f",
									"id": 4,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "100:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "88:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "88:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "104:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4df7e3d0",
									"id": 7,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "124:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "112:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "112:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "128:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "179:174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 12,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "193:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "34",
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "198:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "193:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 15,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "203:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "36",
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "208:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "203:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "193:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 22,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "255:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "35",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "260:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "255:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 30,
														"nodeType": "Block",
														"src": "311:35:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "30",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "333:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 11,
																"id": 29,
																"nodeType": "Return",
																"src": "326:8:0"
															}
														]
													},
													"id": 31,
													"nodeType": "IfStatement",
													"src": "251:95:0",
													"trueBody": {
														"id": 27,
														"nodeType": "Block",
														"src": "263:34:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "32",
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "284:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"functionReturnParameters": 11,
																"id": 26,
																"nodeType": "Return",
																"src": "277:8:0"
															}
														]
													}
												},
												"id": 32,
												"nodeType": "IfStatement",
												"src": "190:156:0",
												"trueBody": {
													"id": 21,
													"nodeType": "Block",
													"src": "210:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "31",
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "232:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 11,
															"id": 20,
															"nodeType": "Return",
															"src": "225:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6d4ce63c",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "147:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "150:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "174:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "174:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "173:6:0"
									},
									"scope": 35,
									"src": "138:215:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 36,
							"src": "62:294:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:329:0"
				},
				"id": 0
			}
		}
	}
}